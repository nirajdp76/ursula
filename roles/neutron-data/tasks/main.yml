---
  #FIXME do we need this on rhel?
- name: install required packages and diagnostic tools
  package:
    name: "{{ item }}"
  with_items:
    - bwm-ng
    - ipset
    - ebtables
  register: result
  until: result|succeeded
  retries: 5

- block:
  - name: update iproute2 to latest ppa (ubuntu)
    package: name=iproute2 state=latest
    register: result
    until: result|succeeded
    retries: 5

  - name: permit VXLAN traffic (ubuntu)
    ufw: rule=allow to_port=4789 proto=udp
    tags: firewall
    when:  neutron.plugin == 'ml2' and 'vxlan' in neutron.tunnel_types

  - name: install neutron-linuxbridge-agent service (ubuntu)
    upstart_service:
      name: "{{ neutron.service_names[os].neutron_linuxbridge_agent }}"
      user: neutron
      cmd: /usr/local/bin/neutron-linuxbridge-agent
      config_dirs: /etc/neutron
      config_files: /etc/neutron/neutron.conf,/etc/neutron/plugins/ml2/ml2_plugin.ini,/etc/neutron/plugins/ml2/ml2_plugin_dataplane.ini
    when: neutron.plugin == 'ml2'
  when: os == 'ubuntu'

- block:
  - name: permit VXLAN traffic (rhel)
    firewalld:
      state: enabled
      permanent: true
      port: 4789/udp
    tags: firewall

  - name: install neutron-linuxbridge-agent service (rhel package)
    systemd_service:
      name: "{{ neutron.service_names[os].neutron_linuxbridge_agent }}"
      description: OpenStack Neutron Linux Bridge Agent Service
      type: simple
      user: neutron
      #FIXME added prestart to match up osp systemd
      #prestart_script: "{{ (ansible_distribution == 'RedHat') | ternary('/usr/bin/neutron-enable-bridge-firewall.sh', '') }}"
      cmd: "{{ (ansible_distribution == 'RedHat') | ternary('/usr/bin/', '/usr/local/bin/') }}neutron-linuxbridge-agent"
      config_dirs: /etc/neutron
      config_files: /etc/neutron/neutron.conf,/etc/neutron/plugins/ml2/ml2_plugin.ini,/etc/neutron/plugins/ml2/ml2_plugin_dataplane.ini
      #envs: "{{ neutron.service.envs }}"
      restart: on-failure
      kill_mode: process
      wanted_by: multi-user.target
    when: neutron.plugin == 'ml2'
  when: os == 'rhel'

- name: ml2 dataplane config
  template: src=etc/neutron/plugins/ml2/ml2_plugin_dataplane.ini
            dest=/etc/neutron/plugins/ml2/ml2_plugin_dataplane.ini
            mode=0644
  when: neutron.plugin == 'ml2'
  notify:
    - restart neutron services

- name: trigger restart on upgrades
  debug:
    msg: "Triggering service restart for upgrade"
  changed_when: True
  notify: restart neutron services
  when: code_has_changed | default('False') | bool and
        upgrade | default('False') | bool

- meta: flush_handlers

- name: start neutron-linuxbridge-agent
  service:
    name: "{{ neutron.service_names[os].neutron_linuxbridge_agent }}"
    state: started
    enabled: True
  when: neutron.plugin == 'ml2'

#FIXME validate cron job on rhel
- name: cleanup interface logs
  template: src=etc/cron.daily/cleanup-neutron-interfaces
            dest=/etc/cron.daily/cleanup-neutron-interfaces
            mode=0755 owner=root

- include: monitoring.yml
  tags:
    - monitoring
    - common
  when: monitoring.enabled|default('True')|bool
