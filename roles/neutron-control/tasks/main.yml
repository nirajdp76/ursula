---
- name: neutron api cache dir
  file: dest=/var/cache/neutron/api owner=neutron state=directory

- block:
  - name: install neutron-server service ( ubuntu )
    upstart_service:
      name: "{{ neutron.service_names[os].neutron_server }}"
      user: neutron
      cmd: /usr/local/bin/neutron-server
      config_dirs: /etc/neutron
      config_files: /etc/neutron/plugins/ml2/ml2_plugin.ini
      envs: "{{ neutron.service.envs }}"

  - name: Permit access to Neutron (ubuntu)
    ufw: rule=allow to_port={{ endpoints.neutron.port.haproxy_api }} proto=tcp
    tags: firewall
  when: os == 'ubuntu'

- block:
  - name: install neutron-server service (rhel)
    systemd_service:
      name: "{{ neutron.service_names[os].neutron_server }}"
      description: OpenStack Neutron Server Service
      type: notify
      notify_access: all
      user: neutron
      cmd: "{{ (ansible_distribution == 'RedHat') | ternary('/usr/bin/', '/usr/local/bin/') }}neutron-server"
      config_dirs: /etc/neutron
      config_files: /etc/neutron/neutron.conf,/etc/neutron/plugins/ml2/ml2_plugin.ini
      #envs: "{{ neutron.service.envs }}"
      restart: on-failure
      kill_mode: process
      wanted_by: multi-user.target

  - name: Permit access to neutron (rhel)
    firewalld:
      state: enabled
      permanent: true
      port: "{{ item }}/tcp"
    with_items:
      - "{{ endpoints.neutron.port.haproxy_api }}"
    tags: firewall
  when: os == 'rhel'

- name: stop neutron service before db sync
  service:
    name: "{{ neutron.service_names[os].neutron_server }}"
    state: stopped
  when: database_create.changed or force_sync|default('false')|bool
  tags: db-migrate

- name: sync neutron database
  command: neutron-db-manage --config-file /etc/neutron/neutron.conf \
           --config-file /etc/neutron/plugins/ml2/ml2_plugin.ini upgrade head
  when: database_create.changed or force_sync|default('false')|bool
  run_once: true
  changed_when: true
  notify: restart neutron services
  # we want this to always be changed so that it can notify the service restart
  tags: db-migrate

- name: trigger restart on upgrades
  debug:
    msg: "Triggering service restart for upgrade"
  changed_when: True
  notify: restart neutron services
  when: code_has_changed | default('False') | bool and
        upgrade | default('False') | bool

- meta: flush_handlers

- name: start neutron-server
  service:
    name: "{{ neutron.service_names[os].neutron_server }}"
    state: started
    enabled: true

- include: monitoring.yml
  tags:
    - monitoring
    - common
  when: monitoring.enabled|default('True')|bool
